- Given two lowercase strings, S1 and S2, sort S1 in same order as S2. If a character in S1 doesn't exist in S2, put
  them at the end. If S1 is "program" and S2 is "grapo", then return "grrapom".

- How can you determine the height of a tree structure? What is the Big O Complexity of the algorithm? Will your answer
  change if you don't have to get an exact result? What is the tradeoff?

- For a two-dimensional array of arbitrary size (not guaranteed to be square) containing binary values, find the total
  number of rectangles defined by four corners and parallel to the array's dimensions.

- How might one define an algorithm to determine whether the placement of a stone in Go captures an area?
  What information might you store to speed up later calculations?

- It is the same question I have done from Leetcode, about the k closest slots. There is a garden with N slots.
  In each slot, there is a flower. The N flowers will bloom one by one in N days. In each day, there will be exactly
  one flower blooming and it will be in the status of blooming since then.

- string
  if function(s1) == function(s2) return true
  else return falsefunction
  if encounter target character for example b, then delete one character before it.Otherwise no operation is needed.
  When there are too many b's return ""
  for example
  accc => accc
  accb => ac
  abdd => dd

- Generating uniform points in given area of rectangle.

- Essentially a permutation problem. Given a time, find the next closest time by reusing the current digit.
  You cannot use a digit repeatedly.

- Transform the html string to DOM tree

- Similar with valid parentheses, but here we check validity of tag matching of a html string.

- Finding longest path in binary tree

- The question is to find the number of connected components for an input of double linked list.

- Given an input of cycled double linked list, please describe an algorithm to find the number of connected components.

- There is a garden with N slots. In each slot, there is a flower. The N flowers will bloom one by one in N days.
  In each day, there will be exactly one flower blooming and it will be in the status of blooming since then.
  Given an array flowers consists of number from 1 to N. Each number in the array represents the place where the flower
  will open in that day.
  For example, flowers[i] = x means that the unique flower that blooms at day i will be at position x, where i and
  x will be in the range from 1 to N.
  Also given an integer k, you need to output in which day there exists two flowers in the status of blooming,
  and also the number of flowers between them is k and these flowers are not blooming.
  If there isn’t such day, output -1.

- Given a time represented in the format "HH:MM",
  form the next closest time by reusing the current digits.
  There is no limit on how many times a digit can be reused.

  You may assume the given input string is always valid.
  For example, "01:34", "12:09" are all valid. "1:34", "12:9" are all invalid.

  Example 1:

  Input: "19:34"
  Output: "19:39"
  Explanation: The next closest time choosing from digits 1, 9, 3, 4, is 19:39, which occurs 5 minutes later.
  It is not 19:33, because this occurs 23 hours and 59 minutes later.

  Example 2:

  Input: "23:59"
  Output: "22:22"
  Explanation: The next closest time choosing from digits 2, 3, 5, 9, is 22:22.
  It may be assumed that the returned time is next day's time since it is smaller than the input time numerically.

- Given a string that represents time like "15:31" find the next time that is formed by the numbers in the string(a
  number can be used more than once). For "15:31", the answer should be "15:33".

- Given an array a[] and an integer k, a[i] means flower at position a[i] will blossom at day i. Find the first day
  that there are k slots between two blooming flowers.

- Finding the perimeter of an island in a 2D grid given a point on the island. Complexity and follow up if the 2D
  grid was millions of nodes. Complexity when there are a lot of local searches.

- Write an algorithm. to find the volume of water contained between bricks.

- Given a list of non-negative numbers and a target integer k, write a function to check if the array has a
  continuous subarray of size at least 2 that sums up to the multiple of k, that is, sums up to n*k where n is also
  an integer.

- Reverse a Linked List

- A graph problem about the longest path.

- Standard graph traversal problem. Not as straightforward as “Do a BFS”, but some variations with some additional
  requirements . But you just need to identify the core problem. The rest is really just adds-on

- Lists manipulation. You are basically expected to come up with an algorithm . (It’s not as simple as applying some
  well known algorithm, but really invent a new one)

- Tree traversals/variations : similar to #1 in that you just need to identify the key point, then it becomes easy.

- Number theories. sort of hit-or-miss.. unless you are a mathematician who can come up with a solution on the flight
  or you have seen the problem before, I find it very hard to do this one.

- Binary search variations. Not extremely hard. If you understand search/sort algorithms well, you can apply them to
  this problem.

- Find n closest points to the origin (any language)

- Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

- Topological sort for directed Graph

- Buy/sell stocks

- How to inverse a binary tree

- Traverse a 2D array in a zig-zag.

- How would you parse out user-inputted HTML tags from a string?

- Forward linked list, traverse in reverse. in O(1) memory

- Given a list of numbers determine if a nonzero subset of any of its elements can add to 0 mod 2015 with repetition.

- Convolution of matrix

- Uncompress a compressed string

- Scheduling problem

- Given an array of strings with duplicates, return an array with unique strings in the same order as they appear in
  original array. E.g. ['Hello', 'World', 'World', 'Awesome', 'Hello', 'Awesome'] -> ['Hello', 'World', 'Awesome']

- Given a start and end point in a sparse matrix, update the rectangle of entries from start to end. Asked to implement
  it with a 'matrix' class and an 'update' member function.

- Sudoku Valid Checker

- Implement the Java String.contains method and describe the speed of your implementation.

- Find the coordinates of the rectangle which is parallel to axis and has minimum area.

- Given a 2D matrix find the path with the maximum product.

- Design an algorithm for a Roomba cleaning bot.

- Given a list of integers, find the longest sequence of consecutive ascending numbers. Just printing out the
  length of the sequence was enough.

- Calculating a given post-fix expression.

- Frog jump problem

- Whats the Big O Value of a merge sort?

- Given an array with some random numbers, find the maximum area formed by the array elements. For example, if the
  array is [1,3,3,2,1] the max area is 6. if the array [1,3,5,4,2] the max area is 9. if the array is [1,5,1,1,1,1]
  the max area is 6.

- Get all paths from node to leaf of a binary tree

- Implement a sorting algorithm based on some conditions. Sort an array as much as possible based on certain conditions
  like "smaller array elements moving from higher index to lower index should be moved only by some 'k' positions
  in the array.

- Find the shortest path from source to the destination of a graph.

- BFS/DFS on a 2D matrix with certain extra conditions using given functions.

- Find first sustring consists of unique characters in given word
  [ex. google -> ogle]

- Print all "symmetric" numbers with a given number of digits. These are numbers that read the same upside down.

- Determine if two given intervals overlap.

- Given a file system consists of file and directories, write code that returns the longest path of an image file

- Create a program where you would output the three highest numbers from an array of 10+ numbers..

- Given an integer, find the largest of the sum of two digits.

- Given an absolute path for a file (Unix-style), simplify it

- Give you 6 balls and 6 holes with different coordinates, find the minimum distance in total you have to put
  balls in hole

- Return the biggest inclusive interval given the tuples

- How many continually pointer point to one linked list.

- Linked list, two sum of linked list

- Search in a dictionary recursively to find word

- Given a list of directed edges, find number of pairs of reciprocal edges

- Merge two sorted lists.

- Implement a FIFO queue using a singly linked list. How to insert locks into the enque and deque function to prevent
  simultaneous access by multiple threads.

- Split string by delimiter

- Invert a binary tree.

- Determine if a graph is bipartite

- Serialize and deserialize a query. Maximum sum subarrary. Binary search.

- LC 304 Range Sum Query 2D - Immutable

- Given matrix m x n containing only 0s and 1s. Write code that finds path of 1s from first row to last row.

- How would you design twitter to scale?

- To implement in Java a Breadth First Search on a NxN char grid in order to find the shortest path to a desired
  char starting from a random position.

- How do you evaluate the reverse polish notation.

- Given a list of integers and another integer. Write a program that returns the posible combinations of the list
  which added, match the integer, numbers can repeat itself.

- We say that two words are rotationally equivalent if there exists an integer such that adding this integer to every
  character of the first word gives the second word.
  Example : "a" and "b" are rotationally equivalent (adding 1 to "a" gives b
  "abcd" and "cdef" are rotationally equivalent (adding 2 to each character gives "cdef")

  given a list of strings, group them by if they are rotationally equivalent.
  Example… ["a", "b", "cdef", "wtf", "abcd"] -> [["a", "b], ["wtf"], ["cdef", "abcd"]

- You have a list of matches, where each match is a pair of ints meaning (ID of Player One, ID of Player Two) where in
  that match player one is better than player two. Make a ranking of all the players in order.

- The question was to find all taxi numbers from 0 - 10^6. Taxi number is a number which can be written as the sum of
  two squared number, and can be written as two different representations:
  Taxi number = a^2 + b^2 = c^2 + d^2

- Implement an algorithm to create a Voronoi diagram.

- Serialize a binary search tree

- Print the entries of a 2D matrix in spiral order

- Find the top minimal m elements of n elements in O(n) time

- Given a set of rules of the form "if A=a, then B must be in {b1, b2, .. bn}, C in {c1, c2, .. cn}, D in..." and an
  input A=a, B=b, C=c.... define a data structure to store this rules and a validator to tell whether the input is
  valid or not.
  Second question: now find an algorithm that, when the input is not valid according to the rules, changing one single
  input make the all sequence valid (if possible)

- Was asked to implement DFS with a twist.

- How do you detect a loop in values generated by x <- f(x) ?

- Ecrivez une fonction qui permet de savoir si un string donné est un Palindrome

- Ecrivez une fonction qui permet de retourner le plus grand Palindrome possible selon un string donné.

- Range-Sum auf einem int-array.

- Find the greatest element in a binary search tree that's less or equal to a target value.

- Suppose you have a stream of (timestamp, tag) events. You need to filter this stream (online), leaving only events
  with tags that haven't been already encountered in the last X seconds.

- Write an algorithm to generate all subsets of set.

- Implement data structure based on key-value map with expiration time.

- Write a function returning a random integer from interval and then a function for testing it.

- How to sort a sequence without knowing its elements. The only allowed operation is to choose two elements and sort
  them.

- Sort lines in very large file (large enough that it does not fit into memory).

- Given two sorted lists of ordered tuples, combine them into one such that overlapping ranges are merged.
  For example: [ (1,4) , (10, 15) , (20, 24) ] and [ (3, 5) , (16, 17), (21, 23) ]
  becomes [ (1,5) , (10, 15) , (16, 17), (20, 24) ]

- You have a collection of arrays with length 10. Every 2 elements represent a domino(0,1; 2, 3; 3,4,...i and i + 1 one
  domino). Write a function that gets an array as parameter(with length 10) and returns true if given array exists in
  your collection, false otherwise. You are free to use any data structure to store arrays(For example I used HashSet
  of arrays).

- Remove duplicates in a list. Optimize time complexity.

- Filter values from a doubly linked list.

- Given a forest represented in array form and a given node, delete that node and all of its children.

- Data structure: how to trace back to the common ancestor in a binary tree for multiple nodes?

- Design a connect 4 game

- Write Fibonacci's algorithm without recursion (using dynamic programming)

- Given a long string, and a width, parse the string return an array list containing string that shorter or equal to
  the given width; if multiple spaces left, split them equally

- Given a sorted array [0-99]
  With input: [1, 5, 45, 86]
  Write a function that prints the empty regions, example Output: “0,2-4,6-44,46-85,87-99”

- Compare two trees using a depth first search.

- Print a binary tree (The way it looks). Print root, then print nodes at height 1, then nodes at 2, and so on.

- Convert string "1234" into a number without using library functions

- Given two sets of data of unknown size and of the same type - sets A and B, find all occurrences of A that
  are also in B. (*Need better than O(n^2) time)

- Find the kth largest element in a sorted array.

- Build a pseudorandom maze. Write a method to deep copy a graph. Given an n x n matrix of numbers, how do I find
  a number?

- Given a series of words written using a scrambled alphabet, figure out what order the letters of the alphabet are in.

- Given a set of 2D coordinates for the 4 corners of each building in a city skyline, find the outline of all the
  buildings. Buildings may or may not overlap.

- Writing a binary search tree.

- Add a new range with a given list of ranges by combining the new range instead of overlapping.
  For example: 1-4, 6-7, 10-12; add 9-11
  Should return 1-4, 6-7, 9-12

- Given a graph node, write a code to return a copy of the sub-graph starting with that node

- Given a document, output the 10 most frequent words with their frequencies in descending order

- Compute all the intersections of two sets of segments in a line.

- Suppose you have a set objects, identified by a unique name. How do you store them so that you can retrieve
  them easily?

- Given a set of cities, each with a given population, select randomly a city with a probability that is proportional
  to the population.

- How do you process a set of log files if you don't have enough memory to do it?

- What is 2^12

- Find the last digit of the nth Fibonacci number

- Program a recursive solution to invert a binary tree

- Implement top view of trees.

- Given a series of flight departures and arrivals, what was the maximum number of flights in the air at any one time?

- Given a set of strings, output equivalence classes of anagrams.

- Given a set of strings, output equivalence classes of by-character rotations.

- Design a class that takes a runnable object, and runs it at a particular time.

- Display all the numbers from 0 to 1000000. All the digits of a displayed number should be different.

- How do you find if a linked list has a loop?

- Average case time complexity of a merge sort

- Implement itoa(int n)

- Develop an algorithm for level generation in a game similar to Candy Crush.

- Suppose that you have a sorted array of integers (positive or negative). You want to apply a function of the
  form f(x) = a * x^2 + b * x + c to each element x of the array such that the resulting array is still sorted.
  Implement this in Java or C++. The input are the initial sorted array and the function parameters (a, b and c)

- Computation of Hamming distance. Build a stack structures with some operations.

- Find the shortest distance between two points in a 2D grid world (bfs).

- Given n coordinate points x, y find the line that intersects most of them.

- Use code to generate an maze and how to can make sure the maze generated has solution.

- Had to check if a Sudoku puzzle was valid and a computer graphics problem

- Given an iterator of Integers, create an iterator that will work correctly only iterating even integers.
  Ex given an iterator that iterates 1, 2, 3, 4, 5, the iterator should iterate 2, 4

- Longest increasing path in 2d array

- Write a java method to count how many 1's are contained in a binary representation of a number.

- covert an array to a binary tree.

- How would you reverse just the vowels in a string?

- Give an approximation of 2 power 26

- Finding all combinations of well-formed brackets

- Max-min agent, binary searching, R-trie,

- Average Complexity of Quicksort Algorithm

- Find a start of a cycle in a linked list with constant space.

- Given a 'friendship' graph, how would you generate friend suggestions for people, and how would you distribute
  the data across machines?

- Solving a problem that reduced to TSP.

- Implement a thread-safe LRU cache

- How would you calculate the number of 1's in a list of 10,000 integers?

- Implement the BigNum's increment method for integers.

- Create a graph class and graph traversal algorithms.

- How would you implement an LRU cache?

- implement dijkstras algorithm

- How to reverse a tree

- Find if there are two members of an array that sum to 10 (10 and 0 count, but 10 alone does not).

